ARM GAS  /tmp/cc033tIR.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"usb_hid_keyboard.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/usb_hid_keyboard.c"
  18              		.section	.text.USB_Keyboard_SendChar,"ax",%progbits
  19              		.align	1
  20              		.global	USB_Keyboard_SendChar
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	USB_Keyboard_SendChar:
  26              	.LVL0:
  27              	.LFB68:
   1:Core/Src/usb_hid_keyboard.c **** /*
   2:Core/Src/usb_hid_keyboard.c ****  * Include this code in your project.
   3:Core/Src/usb_hid_keyboard.c ****  * You can also add this and the header file to your project.
   4:Core/Src/usb_hid_keyboard.c ****  * Make sure to include header file in main.c
   5:Core/Src/usb_hid_keyboard.c ****  * Some actions are based on English keyboard layout.
   6:Core/Src/usb_hid_keyboard.c ****  * Only letters and symbols '.', "space", "enter" '!' and '?' are implemented.
   7:Core/Src/usb_hid_keyboard.c ****  * Add cases in switch statement at line 38 for additional symbols and actions
   8:Core/Src/usb_hid_keyboard.c **** */
   9:Core/Src/usb_hid_keyboard.c **** 
  10:Core/Src/usb_hid_keyboard.c **** #include "usb_hid_keyboard.h"
  11:Core/Src/usb_hid_keyboard.c **** 
  12:Core/Src/usb_hid_keyboard.c **** extern USBD_HandleTypeDef hUsbDeviceFS;
  13:Core/Src/usb_hid_keyboard.c **** static uint8_t HID_buffer[8] = { 0 };
  14:Core/Src/usb_hid_keyboard.c **** 
  15:Core/Src/usb_hid_keyboard.c **** // Send character as a single key press
  16:Core/Src/usb_hid_keyboard.c **** void USB_Keyboard_SendChar(char ch)
  17:Core/Src/usb_hid_keyboard.c **** {
  28              		.loc 1 17 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		.loc 1 17 1 is_stmt 0 view .LVU1
  33 0000 08B5     		push	{r3, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 3, -8
  37              		.cfi_offset 14, -4
  18:Core/Src/usb_hid_keyboard.c **** 	uint8_t ret;
  38              		.loc 1 18 2 is_stmt 1 view .LVU2
  19:Core/Src/usb_hid_keyboard.c **** 
  20:Core/Src/usb_hid_keyboard.c **** 	// Check if lower or upper case
ARM GAS  /tmp/cc033tIR.s 			page 2


  21:Core/Src/usb_hid_keyboard.c **** 	if(ch >= 'a' && ch <= 'z')
  39              		.loc 1 21 2 view .LVU3
  40              		.loc 1 21 15 is_stmt 0 view .LVU4
  41 0002 A0F16103 		sub	r3, r0, #97
  42 0006 DBB2     		uxtb	r3, r3
  43              		.loc 1 21 4 view .LVU5
  44 0008 192B     		cmp	r3, #25
  45 000a 1CD8     		bhi	.L2
  22:Core/Src/usb_hid_keyboard.c **** 	{
  23:Core/Src/usb_hid_keyboard.c **** 		HID_buffer[0] = 0;
  46              		.loc 1 23 3 is_stmt 1 view .LVU6
  47              		.loc 1 23 17 is_stmt 0 view .LVU7
  48 000c 324B     		ldr	r3, .L18
  49 000e 0022     		movs	r2, #0
  50 0010 1A70     		strb	r2, [r3]
  24:Core/Src/usb_hid_keyboard.c **** 		// convert ch to HID letter, starting at a = 4
  25:Core/Src/usb_hid_keyboard.c **** 		HID_buffer[2] = (uint8_t)(4 + (ch - 'a'));
  51              		.loc 1 25 3 is_stmt 1 view .LVU8
  52              		.loc 1 25 19 is_stmt 0 view .LVU9
  53 0012 5D38     		subs	r0, r0, #93
  54              	.LVL1:
  55              		.loc 1 25 17 view .LVU10
  56 0014 9870     		strb	r0, [r3, #2]
  57              	.LVL2:
  58              	.L3:
  26:Core/Src/usb_hid_keyboard.c **** 	}
  27:Core/Src/usb_hid_keyboard.c **** 	else if(ch >= 'A' && ch <= 'Z')
  28:Core/Src/usb_hid_keyboard.c **** 	{
  29:Core/Src/usb_hid_keyboard.c **** 		// Add left shift
  30:Core/Src/usb_hid_keyboard.c **** 		HID_buffer[0] = 2;
  31:Core/Src/usb_hid_keyboard.c **** 		// convert ch to lower case
  32:Core/Src/usb_hid_keyboard.c **** 		ch = ch - ('A'-'a');
  33:Core/Src/usb_hid_keyboard.c **** 		// convert ch to HID letter, starting at a = 4
  34:Core/Src/usb_hid_keyboard.c **** 		HID_buffer[2] = (uint8_t)(4 + (ch - 'a'));
  35:Core/Src/usb_hid_keyboard.c **** 	}
  36:Core/Src/usb_hid_keyboard.c **** 	else // not a letter
  37:Core/Src/usb_hid_keyboard.c **** 	{
  38:Core/Src/usb_hid_keyboard.c **** 		switch(ch)
  39:Core/Src/usb_hid_keyboard.c **** 		{
  40:Core/Src/usb_hid_keyboard.c **** 			case ' ':
  41:Core/Src/usb_hid_keyboard.c **** 				HID_buffer[2] = 44;
  42:Core/Src/usb_hid_keyboard.c **** 				break;
  43:Core/Src/usb_hid_keyboard.c **** 			case '.':
  44:Core/Src/usb_hid_keyboard.c **** 				HID_buffer[2] = 55;
  45:Core/Src/usb_hid_keyboard.c **** 				break;
  46:Core/Src/usb_hid_keyboard.c **** 			case '\n':
  47:Core/Src/usb_hid_keyboard.c **** 				HID_buffer[2] = 40;
  48:Core/Src/usb_hid_keyboard.c **** 				break;
  49:Core/Src/usb_hid_keyboard.c **** 			case '!':
  50:Core/Src/usb_hid_keyboard.c **** 				//combination of shift modifier and key
  51:Core/Src/usb_hid_keyboard.c **** 				HID_buffer[0] = 2;	// shift
  52:Core/Src/usb_hid_keyboard.c **** 				HID_buffer[2] = 30; // number 1
  53:Core/Src/usb_hid_keyboard.c **** 				break;
  54:Core/Src/usb_hid_keyboard.c **** 			case '?':
  55:Core/Src/usb_hid_keyboard.c **** 				//combination of shift modifier and key
  56:Core/Src/usb_hid_keyboard.c **** 				HID_buffer[0] = 2;	// shift
  57:Core/Src/usb_hid_keyboard.c **** 				HID_buffer[2] = 56; // key '/'
ARM GAS  /tmp/cc033tIR.s 			page 3


  58:Core/Src/usb_hid_keyboard.c **** 				break;
  59:Core/Src/usb_hid_keyboard.c **** 			default:
  60:Core/Src/usb_hid_keyboard.c **** 				HID_buffer[2] = 0;
  61:Core/Src/usb_hid_keyboard.c **** 		}
  62:Core/Src/usb_hid_keyboard.c **** 	}
  63:Core/Src/usb_hid_keyboard.c **** 
  64:Core/Src/usb_hid_keyboard.c **** 	// press keys
  65:Core/Src/usb_hid_keyboard.c **** 	ret = USBD_HID_SendReport(&hUsbDeviceFS, HID_buffer, 8);
  59              		.loc 1 65 2 is_stmt 1 view .LVU11
  60              		.loc 1 65 8 is_stmt 0 view .LVU12
  61 0016 0822     		movs	r2, #8
  62 0018 2F49     		ldr	r1, .L18
  63 001a 3048     		ldr	r0, .L18+4
  64 001c FFF7FEFF 		bl	USBD_HID_SendReport
  65              	.LVL3:
  66:Core/Src/usb_hid_keyboard.c **** 	if(ret != HAL_OK)
  66              		.loc 1 66 2 is_stmt 1 view .LVU13
  67              		.loc 1 66 4 is_stmt 0 view .LVU14
  68 0020 0028     		cmp	r0, #0
  69 0022 53D1     		bne	.L16
  70              	.LVL4:
  71              	.L12:
  67:Core/Src/usb_hid_keyboard.c **** 	{
  68:Core/Src/usb_hid_keyboard.c **** 		Error_Handler();
  69:Core/Src/usb_hid_keyboard.c **** 	}
  70:Core/Src/usb_hid_keyboard.c **** 	HAL_Delay(15);
  72              		.loc 1 70 2 is_stmt 1 view .LVU15
  73 0024 0F20     		movs	r0, #15
  74 0026 FFF7FEFF 		bl	HAL_Delay
  75              	.LVL5:
  71:Core/Src/usb_hid_keyboard.c **** 
  72:Core/Src/usb_hid_keyboard.c **** 	// release keys
  73:Core/Src/usb_hid_keyboard.c **** 	HID_buffer[0] = 0;
  76              		.loc 1 73 2 view .LVU16
  77              		.loc 1 73 16 is_stmt 0 view .LVU17
  78 002a 2B49     		ldr	r1, .L18
  79 002c 0023     		movs	r3, #0
  80 002e 0B70     		strb	r3, [r1]
  74:Core/Src/usb_hid_keyboard.c **** 	HID_buffer[2] = 0;
  81              		.loc 1 74 2 is_stmt 1 view .LVU18
  82              		.loc 1 74 16 is_stmt 0 view .LVU19
  83 0030 8B70     		strb	r3, [r1, #2]
  75:Core/Src/usb_hid_keyboard.c **** 	ret = USBD_HID_SendReport(&hUsbDeviceFS, HID_buffer, 8);
  84              		.loc 1 75 2 is_stmt 1 view .LVU20
  85              		.loc 1 75 8 is_stmt 0 view .LVU21
  86 0032 0822     		movs	r2, #8
  87 0034 2948     		ldr	r0, .L18+4
  88 0036 FFF7FEFF 		bl	USBD_HID_SendReport
  89              	.LVL6:
  76:Core/Src/usb_hid_keyboard.c **** 	if(ret != HAL_OK)
  90              		.loc 1 76 2 is_stmt 1 view .LVU22
  91              		.loc 1 76 4 is_stmt 0 view .LVU23
  92 003a 0028     		cmp	r0, #0
  93 003c 49D1     		bne	.L17
  94              	.LVL7:
  95              	.L13:
  77:Core/Src/usb_hid_keyboard.c **** 	{
ARM GAS  /tmp/cc033tIR.s 			page 4


  78:Core/Src/usb_hid_keyboard.c **** 		Error_Handler();
  79:Core/Src/usb_hid_keyboard.c **** 	}
  80:Core/Src/usb_hid_keyboard.c **** 	HAL_Delay(15);
  96              		.loc 1 80 2 is_stmt 1 view .LVU24
  97 003e 0F20     		movs	r0, #15
  98 0040 FFF7FEFF 		bl	HAL_Delay
  99              	.LVL8:
  81:Core/Src/usb_hid_keyboard.c **** }
 100              		.loc 1 81 1 is_stmt 0 view .LVU25
 101 0044 08BD     		pop	{r3, pc}
 102              	.LVL9:
 103              	.L2:
  27:Core/Src/usb_hid_keyboard.c **** 	{
 104              		.loc 1 27 7 is_stmt 1 view .LVU26
  27:Core/Src/usb_hid_keyboard.c **** 	{
 105              		.loc 1 27 20 is_stmt 0 view .LVU27
 106 0046 A0F14103 		sub	r3, r0, #65
 107 004a DBB2     		uxtb	r3, r3
  27:Core/Src/usb_hid_keyboard.c **** 	{
 108              		.loc 1 27 9 view .LVU28
 109 004c 192B     		cmp	r3, #25
 110 004e 05D8     		bhi	.L4
  30:Core/Src/usb_hid_keyboard.c **** 		// convert ch to lower case
 111              		.loc 1 30 3 is_stmt 1 view .LVU29
  30:Core/Src/usb_hid_keyboard.c **** 		// convert ch to lower case
 112              		.loc 1 30 17 is_stmt 0 view .LVU30
 113 0050 214B     		ldr	r3, .L18
 114 0052 0222     		movs	r2, #2
 115 0054 1A70     		strb	r2, [r3]
  32:Core/Src/usb_hid_keyboard.c **** 		// convert ch to HID letter, starting at a = 4
 116              		.loc 1 32 3 is_stmt 1 view .LVU31
 117              	.LVL10:
  34:Core/Src/usb_hid_keyboard.c **** 	}
 118              		.loc 1 34 3 view .LVU32
  34:Core/Src/usb_hid_keyboard.c **** 	}
 119              		.loc 1 34 19 is_stmt 0 view .LVU33
 120 0056 3D38     		subs	r0, r0, #61
 121              	.LVL11:
  34:Core/Src/usb_hid_keyboard.c **** 	}
 122              		.loc 1 34 17 view .LVU34
 123 0058 9870     		strb	r0, [r3, #2]
 124 005a DCE7     		b	.L3
 125              	.LVL12:
 126              	.L4:
  38:Core/Src/usb_hid_keyboard.c **** 		{
 127              		.loc 1 38 3 is_stmt 1 view .LVU35
 128 005c 0A28     		cmp	r0, #10
 129 005e 21D0     		beq	.L5
 130 0060 30D3     		bcc	.L6
 131 0062 3F28     		cmp	r0, #63
 132 0064 2ED8     		bhi	.L6
 133 0066 2028     		cmp	r0, #32
 134 0068 2CD3     		bcc	.L6
 135 006a 2038     		subs	r0, r0, #32
 136              	.LVL13:
  38:Core/Src/usb_hid_keyboard.c **** 		{
 137              		.loc 1 38 3 is_stmt 0 view .LVU36
ARM GAS  /tmp/cc033tIR.s 			page 5


 138 006c 1F28     		cmp	r0, #31
 139 006e 29D8     		bhi	.L6
 140 0070 DFE800F0 		tbb	[pc, r0]
 141              	.L8:
 142 0074 10       		.byte	(.L11-.L8)/2
 143 0075 1C       		.byte	(.L10-.L8)/2
 144 0076 28       		.byte	(.L6-.L8)/2
 145 0077 28       		.byte	(.L6-.L8)/2
 146 0078 28       		.byte	(.L6-.L8)/2
 147 0079 28       		.byte	(.L6-.L8)/2
 148 007a 28       		.byte	(.L6-.L8)/2
 149 007b 28       		.byte	(.L6-.L8)/2
 150 007c 28       		.byte	(.L6-.L8)/2
 151 007d 28       		.byte	(.L6-.L8)/2
 152 007e 28       		.byte	(.L6-.L8)/2
 153 007f 28       		.byte	(.L6-.L8)/2
 154 0080 28       		.byte	(.L6-.L8)/2
 155 0081 28       		.byte	(.L6-.L8)/2
 156 0082 14       		.byte	(.L9-.L8)/2
 157 0083 28       		.byte	(.L6-.L8)/2
 158 0084 28       		.byte	(.L6-.L8)/2
 159 0085 28       		.byte	(.L6-.L8)/2
 160 0086 28       		.byte	(.L6-.L8)/2
 161 0087 28       		.byte	(.L6-.L8)/2
 162 0088 28       		.byte	(.L6-.L8)/2
 163 0089 28       		.byte	(.L6-.L8)/2
 164 008a 28       		.byte	(.L6-.L8)/2
 165 008b 28       		.byte	(.L6-.L8)/2
 166 008c 28       		.byte	(.L6-.L8)/2
 167 008d 28       		.byte	(.L6-.L8)/2
 168 008e 28       		.byte	(.L6-.L8)/2
 169 008f 28       		.byte	(.L6-.L8)/2
 170 0090 28       		.byte	(.L6-.L8)/2
 171 0091 28       		.byte	(.L6-.L8)/2
 172 0092 28       		.byte	(.L6-.L8)/2
 173 0093 22       		.byte	(.L7-.L8)/2
 174              		.p2align 1
 175              	.L11:
  41:Core/Src/usb_hid_keyboard.c **** 				break;
 176              		.loc 1 41 5 is_stmt 1 view .LVU37
  41:Core/Src/usb_hid_keyboard.c **** 				break;
 177              		.loc 1 41 19 is_stmt 0 view .LVU38
 178 0094 104B     		ldr	r3, .L18
 179 0096 2C22     		movs	r2, #44
 180 0098 9A70     		strb	r2, [r3, #2]
  42:Core/Src/usb_hid_keyboard.c **** 			case '.':
 181              		.loc 1 42 5 is_stmt 1 view .LVU39
 182 009a BCE7     		b	.L3
 183              	.L9:
  44:Core/Src/usb_hid_keyboard.c **** 				break;
 184              		.loc 1 44 5 view .LVU40
  44:Core/Src/usb_hid_keyboard.c **** 				break;
 185              		.loc 1 44 19 is_stmt 0 view .LVU41
 186 009c 0E4B     		ldr	r3, .L18
 187 009e 3722     		movs	r2, #55
 188 00a0 9A70     		strb	r2, [r3, #2]
  45:Core/Src/usb_hid_keyboard.c **** 			case '\n':
ARM GAS  /tmp/cc033tIR.s 			page 6


 189              		.loc 1 45 5 is_stmt 1 view .LVU42
 190 00a2 B8E7     		b	.L3
 191              	.LVL14:
 192              	.L5:
  47:Core/Src/usb_hid_keyboard.c **** 				break;
 193              		.loc 1 47 5 view .LVU43
  47:Core/Src/usb_hid_keyboard.c **** 				break;
 194              		.loc 1 47 19 is_stmt 0 view .LVU44
 195 00a4 0C4B     		ldr	r3, .L18
 196 00a6 2822     		movs	r2, #40
 197 00a8 9A70     		strb	r2, [r3, #2]
  48:Core/Src/usb_hid_keyboard.c **** 			case '!':
 198              		.loc 1 48 5 is_stmt 1 view .LVU45
 199 00aa B4E7     		b	.L3
 200              	.LVL15:
 201              	.L10:
  51:Core/Src/usb_hid_keyboard.c **** 				HID_buffer[2] = 30; // number 1
 202              		.loc 1 51 5 view .LVU46
  51:Core/Src/usb_hid_keyboard.c **** 				HID_buffer[2] = 30; // number 1
 203              		.loc 1 51 19 is_stmt 0 view .LVU47
 204 00ac 0A4B     		ldr	r3, .L18
 205 00ae 0222     		movs	r2, #2
 206 00b0 1A70     		strb	r2, [r3]
  52:Core/Src/usb_hid_keyboard.c **** 				break;
 207              		.loc 1 52 5 is_stmt 1 view .LVU48
  52:Core/Src/usb_hid_keyboard.c **** 				break;
 208              		.loc 1 52 19 is_stmt 0 view .LVU49
 209 00b2 1E22     		movs	r2, #30
 210 00b4 9A70     		strb	r2, [r3, #2]
  53:Core/Src/usb_hid_keyboard.c **** 			case '?':
 211              		.loc 1 53 5 is_stmt 1 view .LVU50
 212 00b6 AEE7     		b	.L3
 213              	.L7:
  56:Core/Src/usb_hid_keyboard.c **** 				HID_buffer[2] = 56; // key '/'
 214              		.loc 1 56 5 view .LVU51
  56:Core/Src/usb_hid_keyboard.c **** 				HID_buffer[2] = 56; // key '/'
 215              		.loc 1 56 19 is_stmt 0 view .LVU52
 216 00b8 074B     		ldr	r3, .L18
 217 00ba 0222     		movs	r2, #2
 218 00bc 1A70     		strb	r2, [r3]
  57:Core/Src/usb_hid_keyboard.c **** 				break;
 219              		.loc 1 57 5 is_stmt 1 view .LVU53
  57:Core/Src/usb_hid_keyboard.c **** 				break;
 220              		.loc 1 57 19 is_stmt 0 view .LVU54
 221 00be 3822     		movs	r2, #56
 222 00c0 9A70     		strb	r2, [r3, #2]
  58:Core/Src/usb_hid_keyboard.c **** 			default:
 223              		.loc 1 58 5 is_stmt 1 view .LVU55
 224 00c2 A8E7     		b	.L3
 225              	.L6:
  60:Core/Src/usb_hid_keyboard.c **** 		}
 226              		.loc 1 60 5 view .LVU56
  60:Core/Src/usb_hid_keyboard.c **** 		}
 227              		.loc 1 60 19 is_stmt 0 view .LVU57
 228 00c4 044B     		ldr	r3, .L18
 229 00c6 0022     		movs	r2, #0
 230 00c8 9A70     		strb	r2, [r3, #2]
ARM GAS  /tmp/cc033tIR.s 			page 7


 231 00ca A4E7     		b	.L3
 232              	.LVL16:
 233              	.L16:
  68:Core/Src/usb_hid_keyboard.c **** 	}
 234              		.loc 1 68 3 is_stmt 1 view .LVU58
 235 00cc FFF7FEFF 		bl	Error_Handler
 236              	.LVL17:
  68:Core/Src/usb_hid_keyboard.c **** 	}
 237              		.loc 1 68 3 is_stmt 0 view .LVU59
 238 00d0 A8E7     		b	.L12
 239              	.LVL18:
 240              	.L17:
  78:Core/Src/usb_hid_keyboard.c **** 	}
 241              		.loc 1 78 3 is_stmt 1 view .LVU60
 242 00d2 FFF7FEFF 		bl	Error_Handler
 243              	.LVL19:
  78:Core/Src/usb_hid_keyboard.c **** 	}
 244              		.loc 1 78 3 is_stmt 0 view .LVU61
 245 00d6 B2E7     		b	.L13
 246              	.L19:
 247              		.align	2
 248              	.L18:
 249 00d8 00000000 		.word	HID_buffer
 250 00dc 00000000 		.word	hUsbDeviceFS
 251              		.cfi_endproc
 252              	.LFE68:
 254              		.section	.text.USB_Keyboard_SendString,"ax",%progbits
 255              		.align	1
 256              		.global	USB_Keyboard_SendString
 257              		.syntax unified
 258              		.thumb
 259              		.thumb_func
 261              	USB_Keyboard_SendString:
 262              	.LVL20:
 263              	.LFB69:
  82:Core/Src/usb_hid_keyboard.c **** 
  83:Core/Src/usb_hid_keyboard.c **** // Send string as letters
  84:Core/Src/usb_hid_keyboard.c **** void USB_Keyboard_SendString(char * s)
  85:Core/Src/usb_hid_keyboard.c **** {
 264              		.loc 1 85 1 is_stmt 1 view -0
 265              		.cfi_startproc
 266              		@ args = 0, pretend = 0, frame = 0
 267              		@ frame_needed = 0, uses_anonymous_args = 0
 268              		.loc 1 85 1 is_stmt 0 view .LVU63
 269 0000 38B5     		push	{r3, r4, r5, lr}
 270              	.LCFI1:
 271              		.cfi_def_cfa_offset 16
 272              		.cfi_offset 3, -16
 273              		.cfi_offset 4, -12
 274              		.cfi_offset 5, -8
 275              		.cfi_offset 14, -4
 276 0002 0546     		mov	r5, r0
  86:Core/Src/usb_hid_keyboard.c **** 	uint8_t i = 0;
 277              		.loc 1 86 2 is_stmt 1 view .LVU64
 278              	.LVL21:
  87:Core/Src/usb_hid_keyboard.c **** 
  88:Core/Src/usb_hid_keyboard.c **** 	while(*(s+i))
ARM GAS  /tmp/cc033tIR.s 			page 8


 279              		.loc 1 88 2 view .LVU65
  86:Core/Src/usb_hid_keyboard.c **** 	uint8_t i = 0;
 280              		.loc 1 86 10 is_stmt 0 view .LVU66
 281 0004 0024     		movs	r4, #0
 282              		.loc 1 88 7 view .LVU67
 283 0006 03E0     		b	.L21
 284              	.LVL22:
 285              	.L22:
  89:Core/Src/usb_hid_keyboard.c **** 	{
  90:Core/Src/usb_hid_keyboard.c **** 		USB_Keyboard_SendChar(*(s+i));
 286              		.loc 1 90 3 is_stmt 1 view .LVU68
 287 0008 FFF7FEFF 		bl	USB_Keyboard_SendChar
 288              	.LVL23:
  91:Core/Src/usb_hid_keyboard.c **** 		i++;
 289              		.loc 1 91 3 view .LVU69
 290              		.loc 1 91 4 is_stmt 0 view .LVU70
 291 000c 0134     		adds	r4, r4, #1
 292              	.LVL24:
 293              		.loc 1 91 4 view .LVU71
 294 000e E4B2     		uxtb	r4, r4
 295              	.LVL25:
 296              	.L21:
  88:Core/Src/usb_hid_keyboard.c **** 	{
 297              		.loc 1 88 8 is_stmt 1 view .LVU72
 298 0010 285D     		ldrb	r0, [r5, r4]	@ zero_extendqisi2
 299 0012 0028     		cmp	r0, #0
 300 0014 F8D1     		bne	.L22
  92:Core/Src/usb_hid_keyboard.c **** 	}
  93:Core/Src/usb_hid_keyboard.c **** }
 301              		.loc 1 93 1 is_stmt 0 view .LVU73
 302 0016 38BD     		pop	{r3, r4, r5, pc}
 303              		.loc 1 93 1 view .LVU74
 304              		.cfi_endproc
 305              	.LFE69:
 307              		.section	.bss.HID_buffer,"aw",%nobits
 308              		.align	2
 311              	HID_buffer:
 312 0000 00000000 		.space	8
 312      00000000 
 313              		.text
 314              	.Letext0:
 315              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 316              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 317              		.file 4 "Middlewares/ST/STM32_USB_Device_Library/Core/Inc/usbd_def.h"
 318              		.file 5 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 319              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 320              		.file 7 "Core/Inc/main.h"
 321              		.file 8 "Middlewares/ST/STM32_USB_Device_Library/Class/HID/Inc/usbd_hid.h"
ARM GAS  /tmp/cc033tIR.s 			page 9


DEFINED SYMBOLS
                            *ABS*:00000000 usb_hid_keyboard.c
     /tmp/cc033tIR.s:19     .text.USB_Keyboard_SendChar:00000000 $t
     /tmp/cc033tIR.s:25     .text.USB_Keyboard_SendChar:00000000 USB_Keyboard_SendChar
     /tmp/cc033tIR.s:142    .text.USB_Keyboard_SendChar:00000074 $d
     /tmp/cc033tIR.s:174    .text.USB_Keyboard_SendChar:00000094 $t
     /tmp/cc033tIR.s:249    .text.USB_Keyboard_SendChar:000000d8 $d
     /tmp/cc033tIR.s:311    .bss.HID_buffer:00000000 HID_buffer
     /tmp/cc033tIR.s:255    .text.USB_Keyboard_SendString:00000000 $t
     /tmp/cc033tIR.s:261    .text.USB_Keyboard_SendString:00000000 USB_Keyboard_SendString
     /tmp/cc033tIR.s:308    .bss.HID_buffer:00000000 $d

UNDEFINED SYMBOLS
USBD_HID_SendReport
HAL_Delay
Error_Handler
hUsbDeviceFS
